const Utils={debounce(t,r){let e;return function(...o){clearTimeout(e),e=setTimeout(()=>{clearTimeout(e),t.apply(this,o)},r)}},throttle(t,r){let e;return function(...o){e||(t.apply(this,o),e=!0,setTimeout(()=>e=!1,r))}},formatXML(t){try{const r="  ",e=/(>)(<)(\/*)/g;let o=t.replace(e,"$1\r\n$2$3"),n=0;return o.split("\r\n").map(t=>{let e=0;t.match(/.+<\/\w[^>]*>$/)?e=0:t.match(/^<\/\w/)?0!==n&&(n-=1):e=t.match(/^<\w[^>]*[^\/]>.*$/)?1:0;const o=r.repeat(n);return n+=e,o+t}).join("\r\n")}catch(r){return console.error("XML formatting error:",r),t}},validateXML(t){try{const r=new DOMParser,e=r.parseFromString(t,"text/xml").querySelector("parsererror");return e?{valid:!1,error:e.textContent}:{valid:!0,error:null}}catch(t){return{valid:!1,error:t.message}}},fileSize(t){if(0===t)return"0 Bytes";const r=Math.floor(Math.log(t)/Math.log(1024));return parseFloat((t/Math.pow(1024,r)).toFixed(2))+" "+["Bytes","KB","MB","GB"][r]}};"undefined"!=typeof window&&(window.Utils=Utils);