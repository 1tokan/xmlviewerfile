class XMLParser{constructor(){this.cache=new Map,this.maxCache=50}parse(e){const t=e.length+e.charCodeAt(0);if(this.cache.has(t))return this.cache.get(t);const r=(new DOMParser).parseFromString(e,"text/xml");return this.cache.size>=this.maxCache&&this.cache.clear(),this.cache.set(t,r),r}getCALS(e){const t=e.querySelectorAll("tgroup"),r=e.querySelectorAll("table"),s=[];return[...t,...r].forEach(e=>{const t=e.querySelectorAll("row");0!==t.length&&s.push({cols:+(e.getAttribute("cols")||this.getCols(e)),rows:[...t].map(e=>[...e.querySelectorAll("entry")].map(e=>({text:e.textContent,colname:e.getAttribute("colname"),namest:e.getAttribute("namest"),nameend:e.getAttribute("nameend"),morerows:+(e.getAttribute("morerows")||0)})))})}),s}getCols(e){return e.querySelectorAll("colspec").length||1}}window.XMLParser=XMLParser;