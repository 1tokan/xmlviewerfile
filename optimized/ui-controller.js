class UIController{constructor(){this.parser=new XMLParser,this.renderer=new TableRenderer,this.init()}init(){document.addEventListener("DOMContentLoaded",()=>{this.setupEventListeners()}),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>this.setupEventListeners()):this.setupEventListeners()}setupEventListeners(){const e=document.getElementById("fileInput"),t=document.querySelector(".upload-area");e&&e.addEventListener("change",e=>{const t=e.target.files[0];t&&this.handleFile(t)}),t&&t.addEventListener("click",()=>{e&&e.click()}),document.addEventListener("dragover",e=>{e.preventDefault(),e.dataTransfer.dropEffect="copy"}),document.addEventListener("drop",e=>{e.preventDefault();const t=e.dataTransfer.files[0];t&&this.handleFile(t)})}handleFile(e){if(!e)return;const t=document.getElementById("xmlContainer");if(!t)return;t.innerHTML='<div class="loading">Processing XML file...</div>';const r=new FileReader;r.onload=r=>{try{const n=r.target.result,s=this.parser.parse(n),i=this.parser.getCALS(s);i.length>0?(this.renderer.render(i,t),t.insertAdjacentHTML("afterbegin",`<div class="success">Successfully loaded ${i.length} CALS table(s) from ${e.name}</div>`)):t.innerHTML='<div class="error">No CALS tables found in the XML file. Please check if the file contains &lt;tgroup&gt; or &lt;table&gt; elements with &lt;row&gt; and &lt;entry&gt; children.</div>'}catch(e){t.innerHTML=`<div class="error">Error processing file: ${e.message}</div>`,console.error("XML processing error:",e)}},r.onerror=()=>{t.innerHTML='<div class="error">Error reading file</div>'},r.readAsText(e)}}"undefined"!=typeof window&&(window.UIController=UIController);